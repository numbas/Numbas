/** Generator styles
 */

@layer variables {
    :root {
        --page-margin-top: 10;
        --page-margin-left: 10;
        --page-margin-right: 10;
        --page-margin-bottom: 10;

        --light-faint-bg-mix: 3%;
        --dark-faint-bg-mix: 95%;
    }
}


@layer theme {
body.worksheet {
    overflow: hidden;

    & #generator {
        margin-bottom: var(--spacing);
        background: var(--main-color);

        & > * {
            margin-bottom: var(--spacing);
            padding: var(--spacing);
        }

        & p {
            margin-bottom: var(--third-space);
        }

        & .controls {
            display: grid;
            grid-gap: var(--spacing);
            margin: 0 0 var(--spacing) 0;

            & > :is(label, button) {
                grid-column: 1;
                justify-self: end;
                margin-bottom: 0;
            }

            & input {
                border: none;
                justify-self: start;

                &[type="radio"] {
                    margin-right: var(--half-space);
                }
            }
        }

        & #print {
            display: grid;
            grid-gap: var(--half-space);
        }

        & #sheettype {
            list-style-type: none;
            margin-left: 0;
            padding-left: 0;

            & li:hover {
                cursor: pointer;
            }
        }

        & #margins-input {
            display: grid;
            grid-template: 
                ". top ."
                "left . right"
                ". bottom ." 
                /
                auto auto auto;
            justify-self: start;

            & #page-margin-top {grid-area: top }
            & #page-margin-left {grid-area: left }
            & #page-margin-bottom {grid-area: bottom }
            & #page-margin-right {grid-area: right }
        }

    }

    & #examList > .exam:not([data-status="done"]) {
        display: none;
    }

}

:host(numbas-exam.questionsheet) .adviceContainer,
:host(numbas-exam.answersheet:not(.answersheet-show-question-content)) :is(.statement, .statement + hr, .parts),
:host(numbas-exam.answersheet) .student.answer,
:host(numbas-exam.questionsheet) .correct.answer,
:host(numbas-exam:not(.show-exam-id)) .examID {
    display: none;
}

:host(numbas-exam) > exam-container {

    & img {
        max-width: 100%;
    }
    & :is(h1,h2,h3,h4,h5,h6) {
        margin-top: 0;
        margin-bottom: var(--half-space);
    }
    & .number {
        font-size: 1.3em;
        margin-right: var(--half-space);
        margin-bottom: var(--spacing);
    }
    & button {
        background-color: var(--main-color);
        border: 2px solid var(--text-color);
        border-radius: 3px;
    }

    & :is(.question, #infoDisplay) {
        max-height: none;
        height: revert;
    }

    & .student.answer > .warnings,
      .warning-icon,
      .steps,
      .penaltyMessage,
      .jme-preview,
      .answered-state,
      matrix-input .matrix-size,
      .part .feedback-icon,
      .part .feedbackMessages,
      .navBar,
      #partFeedback,
      .questionMenu,
      .btn {
        display: none;
    }

    & .part .correct.answer.alert {
        border: none;
        background: none;
        padding: 0;
    }

    & .partheader {
        margin-left: 0;
    }
    & .question .parts {
        margin-left: 0;
    }
    & .statement, .exam .advice {
        margin: var(--spacing) 0;
        padding-top: calc(0.2 * var(--spacing));
        padding-left: 0;
        padding-bottom: calc(0.1 * var(--spacing));
        background: none;
    }
    & #questionContainer p {
        line-height: var(--spacing);
    }
    & .mainDisplay {
        overflow-y: revert;
    }
    & #everything {
        & > main > #questionContainer > .contentArea > #questionDisplay > .question-wrapper {
            height: revert;
        }

        exam-container.show-nav & {
            grid-template: "main";
        }

        & #sideNav {
            display: none;
        }
    }
    & hr {
        max-width: calc(0.4 * var(--readable-width));
        border: none;
        height:1px;
        background: var(--medium-line-color);
    }
    & #questionNameDisplay {
        font-size: 2em;
    }

    & > .intro {
        padding: var(--spacing);
        margin: var(--double-space) 0;
    }

    & .logo img {
        height: 50%;
    }
    & #questionContainer .colwrap {
        width: 100%;
        left: initial;
    }
    & #questionContainer .col1wrap {
        width: 100%;
        right: auto;
        padding: initial;
        position:initial;
    }
    & .questionList {
        clear: both;
        list-style-type: none;
        max-height: none;
    }

    & input[type="text"], .exam input[type="number"] {
        border:none;
        border-bottom: 1px solid;
        height: 1.5em;
        width: 6em;
    }

    & .question > .marks {
        text-align: right;
        font-weight: bold;
        margin-top: var(--spacing);
    }

    & .partFeedback {
        text-align: right;
        font-style: italic;
    }
}

@page {
    margin: 
        calc(1mm * var(--page-margin-top))
        calc(1mm * var(--page-margin-right))
        calc(1mm * var(--page-margin-bottom))
        calc(1mm * var(--page-margin-left))
    ;
}

:root {
    --page-margin-top: 30;
    --page-margin-bottom: 30;
    --page-margin-left: 30;
    --page-margin-right: 30;
}

body.worksheet {
    & #examList {
        list-style: none;
    }

}

@media screen {
    .screen-only {
        display: none !important;
    }
    .print-only {
        display: initial;
    }

    body.worksheet {
        & #everything {
            display: grid;
        }

        & #examList {
            width: 210mm;
            justify-self: center;
            background: var(--background-color);

            & .exam {
                &:not(.shown) {
                    display: none;
                }
            }
        }
    }
}

@media screen and (orientation: landscape) {
    body.worksheet {
        & #everything {
            display: grid;
            grid-gap: var(--spacing);
            grid-template: auto / 20em 1fr;
            max-height: 100vh;
        }

        & #generator {
            height: 100vh;
            overflow-y: auto;
            border-right: var(--half-space) solid var(--main-darker);
            margin: 0;

            & .controls {
                grid-gap: calc(0.2 * var(--spacing));
            }

            & .controls > :is(label, button) {
                grid-column: 1;
                justify-self: start;
            }

            & .controls input, #margins-input {
                justify-self: start;
                margin-left: var(--spacing);
                margin-bottom: var(--spacing);
                align-self: start;
            }
        }


        & #examList {
            overflow-y: auto;
            max-height: 100vh;
        }
    }
}
@media (orientation: portrait) {
    body.worksheet #generator .controls {
        grid-template-columns: max-content 1fr;
    }
}
@media (orientation: portrait) and (max-width: 32em) {
    body.worksheet #generator .controls {
        grid-template-columns: 1fr;

        & > :is(label,button) {
            justify-self: start;
        }
    }
}

@media print {
    :root {
        container-type: revert;
    }

    body.worksheet {
        overflow-y: hidden;
        display: block;

        & .exam:not(:last-child) {
            break-after: always;
        }
        & #examList.break-between-questions .question {
            page-break-before: always;
            break-before: always;
        }
    }

    :host(numbas-exam) exam-container.no-printing-questions #questionContainer {
        display: block;
    }
}


@media print {
    body.worksheet {
        font-size: calc(var(--text-size) * 14pt);

        & #generator {
            display: none;
        }
    }

}


@media print {
    .invisible:not(.print-visible) {
        display: none;
    }
}
}

@layer force {
    @media print {
        #everything,
        :host(numbas-exam) :is(
            #everything,
            #everything > main > #questionContainer > .contentArea
        )
        {
            display: block;
        }
    }
}
